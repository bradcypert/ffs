module.exports = {"version":3,"file":"main.js","sources":["../src/Constants.ts","../src/Scheduler.ts","../src/TaskQueue.ts","../src/Kernel.ts","../src/main.ts"],"sourcesContent":["export default {\n    SOURCE_POINT_TTL: 100,\n    CONSTRUCTION_POINT_TTL: 100,\n    CONSTRUCTION_POINTS_PER_BUILDER: 10,\n    CPU_BUFFER: 100,\n    CPU_MINIMUM: 0.30,\n    CPU_ADJUST: 0.05,\n    CPU_BOOST: 0,\n\n\n}","// The scheduler decides what needs to happen and then creates tasks for it.\nimport Constants from './Constants';\nimport TaskQueue from './TaskQueue';\n\nexport default class Scheduler {\n    static getRooms(): {[p: string] : Room} {\n        return Game.rooms;\n    }\n\n    static createSchedule() {\n        let rooms = _.values(this.getRooms());\n\n        _.forEach(rooms, (room: Room) => {\n            this.determineWorkload(room);\n            this.delegateCreeps(room);\n        });\n    }\n\n    static determineWorkload(room: Room) {\n        const unworkedSourcePoints = room.find(FIND_SOURCES)\n            .map(Scheduler.getUnusedSourcePoints)\n            .reduce((acc, val) => acc + val, 0);\n\n        const CIR = Scheduler.getCreepsInRoom(room);\n        const workersInRoom = CIR\n            .filter(c => (<any>c.memory).task === 'worker').length;\n\n        if (unworkedSourcePoints > workersInRoom) {\n            this.requisitionCreep('worker', room);\n        }\n\n        const constructionPoints = Scheduler.getConstructionPoints(room).length;\n        const buildersInRoom = CIR\n            .filter(c => (<any>c.memory).task === 'builder').length;\n\n        if (constructionPoints / Constants.CONSTRUCTION_POINTS_PER_BUILDER > buildersInRoom) {\n            this.requisitionCreep('builder', room);\n        }\n    }\n\n    static getConstructionPoints(room: Room) {\n        return room.find(FIND_MY_CONSTRUCTION_SITES);\n    }\n\n    static getUnusedSourcePoints(source: Source) {\n        const x = source.pos.x;\n        const y = source.pos.y;\n        const room = source.pos.roomName;\n        const m = Game.map.getTerrainAt;\n        return [m(x-1, y+1, room), m(x, y+1, room), m(x+1, y+1, room),\n                m(x-1, y, room), 'wall', m(x+1, y, room),\n                m(x-1, y-1, room), m(x, y-1, room), m(x+1, y-1, room)].filter(s => s === 'wall').length;\n    }\n\n    static delegateCreeps(room: Room) {\n        let creeps = this.getCreepsInRoom(room);\n        _.forEach(creeps, (creep: Creep) => {\n            let memory = creep.memory;\n            if (!memory.hasOwnProperty('task')) {\n                (<any>creep.memory).task = this.assignTaskByBodyParts(creep);\n            }\n        });\n    }\n\n    static getCreepsInRoom(room: Room): Creep[] {\n        return (<Creep[]>_.values(Game.creeps)).filter((c) => c.room.name === room.name);\n    }\n\n    static taskMap = {\n        'carry': 'hauler',\n        'move': 'builder',\n        'work': 'worker',\n        'attack': 'soldier',\n        'ranged_attack': 'soldier',\n        'heal': 'medic'\n    };\n\n    static assignTaskByBodyParts(creep: Creep) {\n        let counts = _.reduce(creep.body, (acc: any, val) => {\n            acc[val.type] = (acc[val.type] || 0) + 1;\n            return acc;\n        }, {});\n        delete counts.tough;\n        let keysSorted = Object.keys(counts).sort(function(a,b){return counts[a]-counts[b]});\n        return (<any>this.taskMap)[keysSorted[0]];\n    }\n\n    static partMap = {\n        'hauler': [MOVE, CARRY, CARRY],\n        'builder': [MOVE, MOVE, CARRY],\n        'worker': [MOVE, WORK, WORK]\n    };\n    static requisitionCreep(type: string, room: Room) {\n        const parts = (<any>this.partMap)[type];\n        const spawner = room.find(FIND_MY_SPAWNS)\n            .filter((s) => s.spawnCreep(parts, '', {dryRun: true}) && !s.spawning)[0];\n        if (spawner) {\n            spawner.spawnCreep(parts, type+new Date().toISOString(), {memory: {task: type}});\n        }\n    }\n}","import Task from './tasks/Task';\n\n/**\n * The task queue is a simple buffer for running tasks.\n * The kernel operates on values in the queue based on remaining CPU availability\n * and the Scheduler populates the queue based off the state of the game.\n */\nexport default class TaskQueue {\n    private static queue: Task[] = [];\n\n    /**\n     * Add a new task to the queue.\n     * @param {Task} task\n     */\n    public static add(task: Task) {\n        this.queue.push(task);\n    }\n\n    /**\n     * Get and remove the next task from the queue.\n     * Might be useful for deferring execution of high CPU tasks.\n     */\n    public static pop(): Task | undefined {\n        return this.queue.shift();\n    }\n\n    public static peek(): Task | null {\n        return this.queue[0];\n    }\n\n    /**\n     * Process the next task in the queue.\n     */\n    public static process() {\n        const task = this.queue.pop();\n        if (task) {\n            task.run();\n        } else {\n            console.warn(\"Trying to process an empty queue. Error code: QUAILHOUND\");\n        }\n    }\n}","import TaskQueue from 'TaskQueue';\nimport Constants from './Constants';\n\nexport default class Kernel {\n  public static tick() {\n      while(this.CPUAvailable()) {\n          TaskQueue.process()\n      }\n  }\n\n  private static CPUAvailable(): boolean {\n      const cpuUsed = Game.cpu.getUsed();\n      const cpuLimit = Game.cpu.limit;\n      return (cpuLimit - (Constants.CPU_BUFFER * Constants.CPU_ADJUST) > cpuUsed);\n  }\n}","// When compiling TS to JS and bundling with rollup, the line numbers and file names in error messages change\n// This utility uses source maps to get the line numbers and file names of the original, TS source code\nimport Scheduler from 'Scheduler';\nimport Kernel from 'Kernel';\n\nexport const loop = () => {\n  console.log(`Current game tick is ${Game.time}`);\n\n  // Automatically delete memory of missing creeps\n  for (const name in Memory.creeps) {\n    if (!(name in Game.creeps)) {\n      delete Memory.creeps[name];\n    }\n  }\n\n  Scheduler.createSchedule();\n  Kernel.tick();\n};\n"],"names":[],"mappings":"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"};